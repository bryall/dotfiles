# Usage, inside tmux (note, my Prefix is Ctrl-w):
#   Alt-w: create a new window
#   Prefix-c: create a new window
#   Alt-[1/2/..]: change to numbered window
#   Prefix-1/2/3/4...: change to numbered window
#   Prefix-d: detach session
#   Prefix-x: kill a window
#   Prefix-|: create vertical pane
#   Prefix--: create horizontal pane
#   Ctrl-h/j/k/l: navigate between panes, including Vim splits if Vim Tmux
#                 Navigator has been configured.
#   Prefix-y: toggle "synchronize" to all panes of the current windows
#   Prefix-<UP>/<DOWN>: move panes around current window.
#   Prefix-a: rename the current window
#   Prefix-z: toggle pane zoom between full window size and normal pane size.
#   Prefix-w: list all windows
#
# Usage, copy and paste inside tmux:
#   Alt-ESCAPE: enter copy mode, use vi keys for navigation (h,j,k,l,H,M,L,g,G,/,?)
#   v: start selection
#   y or Enter: end selection
#   Alt-p: paste selection
#   Prefix-=: view all copy buffers and pastes selection
#
#   Note, hold "Shift" if one wishes to copy and paste into or out-of tmux
#   using mouse selections.
#
# Usage, at command line:
#   tmux new -s foglamp: create a new session named foglamp
#   tnew: bash alias to create a session named using the current directory
#   tmux ls: list active sessions
#   tmux attach: attach to first active session
#   tmux attach -t foglamp: attach to session named "foglamp".


#============================
# Configuration
#============================

# Change the default prefix.
unbind-key C-b
set -g prefix C-a

# Enable 256 color support.
set -g default-terminal "screen-256color"

# Hack to get clipboard working again on Mac Sierra.
# Read: https://github.com/tmux/tmux/issues/543
if-shell '[[ "$OS" = "Darwin" ]]' \
    'set -g default-command "reattach-to-user-namespace -l ${SHELL}"'

# Needed for CTRL-Left/Right to work.
# setw -g xterm-keys on

# Allow xterm to scroll using Shift-[Arrow/Page Up/Down]. Note, this works best
# for tmux windows with only no splits.
set -ga terminal-overrides ',xterm-256color:Tc'

# Set the status bar attributes.
set -g status-left-length 40
set -g status-interval 30

# Make Vim more responsive.
set -sg escape-time 0

# Increase scroll back limit.
set -g history-limit 5000

# Use vi key bindings in copy mode.
setw -g mode-keys vi

# Window and pane numbering should be 1-based.
set -g base-index 1
setw -g pane-base-index 1

# Renumber windows when one is closed.
set -g renumber-windows on

# Enable focus events. Needed for Vim FocusGained/FocusLost event handling.
set -g focus-events on

# Highlight window when it has new activity, but do not display an alert.
setw -g monitor-activity on
set -g visual-activity off

# Enable mouse support including pane focusing and selection support.
set -g mouse on
unbind-key -Tcopy-mode-vi MouseDragEnd1Pane
bind-key -Tcopy-mode-vi MouseDown1Pane send -X clear-selection

#============================
# Bindings
#============================

# Reload tmux.conf via Prefix-r.
bind-key r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# Nicer split window bindings.
unbind-key %
bind-key | split-window -h
unbind-key '"'
bind-key - split-window -v

# Smart pane navigation including awareness of Vim splits when using "Vim Tmux
# Navigator" plugin.
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Rename the current window.
bind-key a command-prompt "rename-window %%"

# Pane resizing.
bind-key -r < resize-pane -L 2
bind-key -r - resize-pane -D 2
bind-key -r + resize-pane -U 2
bind-key -r > resize-pane -R 2

# Simpler window creation using Alt-w.
bind-key -n M-w new-window

# copy paste
bind C-y run "tmux show-buffer | xclip -selection clipboard -i >/dev/null"
bind C-p run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"

# scroll back buffer
set -g history-limit 5000

#============================
# Style
#============================

# Set status line, windows, pane and message colors.
set -g message-style            bg=colour235,fg=colour248
set -g pane-active-border-style bg=colour232,fg=colour110
set -g pane-border-style        bg=colour232,fg=colour236
set -g status-style             bg=colour235,fg=colour248
set -gw window-status-activity-style bg=colour235,fg=colour216,none
set -gw window-status-current-style  bg=colour235,fg=colour114

# Set status bar components and style.
set -g status-left "#[bg=colour235]#[fg=colour111][#S@#h] "
if-shell 'case "$OS" in *Linux*) true;; *) false;; esac' \
    'set -g status-right "#[bg=colour235]#[fg=colour174]%a %I:%M%P"' \
    'set -g status-right "#[bg=colour235]#[fg=colour174]%a %I:%M%p"' \
